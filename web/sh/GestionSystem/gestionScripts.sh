#!/bin/sh

if test -z "$*"
then
    echo "Liste des arguments possible : [as]importbin, [as]transfertftp, [as]all, [as]rapportjournalier, [as]rapportsecurite, [as]rapportsystem, [as]rapportetat [as]modbusget"
    exit 1
else
    argument=$1
fi

fichierlog=${BOILERBOX}/web/logs/system.log

# FONCTIONS **********************************************************************************************

aTransfertFtp()
{
    # 1) Création du flag ArretServiceImport
    flagArretServiceTransfertFtp='/tmp/.flagArretServiceTransfertFtp'
    touch $flagArretServiceTransfertFtp

    # 2) Attente de la fin du traitement de transfert Ftp
    flagBoilerBoxDownloadFtp='/tmp/.flagBoilerBoxDownloadFtp'
    # Attente de la fin des transferts Ftp
    while true
    do
        if [ -e "$flagBoilerBoxDownloadFtp" ]
        then
            nbScriptsTransfert=$(ps -ef | grep "php.*BoilerBox.*transfert.*ftp" | grep -v grep | wc -l)
            if  [ $nbScriptsTransfert -eq 1 ]
            then
                sleep 2
            elif [ $nbScriptsTransfert -eq 0 ]
            then
                echo `date +"%Y-%m-%d %T"`"Le Flag de transfert ftp existe mais aucun script de transfert n'a été trouvé. Arrêt du traitement" >> $fichierlog
                break
            fi
			# Forcage de la suppression du flag
			rm $flagBoilerBoxDownloadFtp
        else
            break
        fi
    done

    # 3) Modification de la crontab : Mise en commentaire de la partie transfertFTP
    sed -r 's/^([^#].*transfertFtp.sh)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
    echo `date +"%Y-%m-%d %T"`";[script];Arrêt du script de transfert ftp effectué" >> $fichierlog
    rm $flagArretServiceTransfertFtp
}

sTransfertFtp()
{
    #cp -ap /var/spool/cron/tabs/root /tmp/boilerboxCrontab
    sed -r 's/^#(.*transfertFtp.sh)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
    echo `date +"%Y-%m-%d %T"`";[script];Relance du script de transfert ftp effectuée" >> $fichierlog
}


aImportBin()
{
    # 1) Création du flag ArretServiceImport
    flagArretServiceImportBin='/tmp/.flagArretServiceImportBin'
    touch $flagArretServiceImportBin

    #Vérification que les scripts de création des fichiers binaires et d'importation des données ne sont pas en cours d'execution
    flagBoilerBoxScriptImportBinaire='/tmp/.flagBoilerBoxScriptImportBinaires'
    flagBoilerBoxImportationBinaire='/tmp/.flagBoilerBoxImportBinaires'
    # Attente de la fin des importations / création des fichiers binaires
    while true
    do
        if [ -e "$flagBoilerBoxScriptImportBinaire" ] || [ -e "$flagBoilerBoxImportationBinaire" ]
        then
        	nbScriptsImport=$(ps -ef | grep "php.*BoilerBox.*import.*bin" | grep -v grep | wc -l)
            if  [ $nbScriptsImport -eq 1 ]
            then
            	sleep 2
            elif [ $nbScriptsImport -eq 0 ]
            then
            	echo `date +"%Y-%m-%d %T"`";Le Flag d'importation existe mais aucun script d'importation n'a été trouvé. Arrêt du traitement" >> $fichierlog
               	break
            fi
        else
            break
        fi
    done

    # 3) Modification de la crontab : Mise en commentaire de la partie transfertFTP
    sed -r 's/^([^#].*importBin.sh)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
    echo `date +"%Y-%m-%d %T"`";[script];Arrêt du script d'importation binaire effectué" >> $fichierlog
    rm $flagArretServiceImportBin
	# Forcage de la suppression des flags
	rm $flagBoilerBoxScriptImportBinaire
	rm $flagBoilerBoxImportationBinaire
}

sImportBin()
{
    # 3) Modification de la crontab : Mise en commentaire de la partie transfertFTP
    sed -r 's/^#(.*importBin.sh)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
    sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
    echo `date +"%Y-%m-%d %T"`";[script];Relance du script d'importation binaire effectuée" >> $fichierlog
}


aRapportJournalier()
{
   	# 3) Modification de la crontab : Mise en commentaire de la partie RapportJournalier
   	sed -r 's/^([^#].*rapportJournalier.sh)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
    echo `date +"%Y-%m-%d %T"`";[script];Arrêt de la génération du rapport journalier effectué" >> $fichierlog
}

sRapportJournalier()
{
    sed -r 's/^#(.*rapportJournalier.sh)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
    echo `date +"%Y-%m-%d %T"`";[script];Relance de la génération du rapport journalier effectuée" >> $fichierlog
}


aRapportSecurite()
{
    	# 3) Modification de la crontab : Mise en commentaire de la partie RapportJournalier
    	sed -r 's/^([^#].*rapportSecurite.sh)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Arrêt de la génération du rapport de sécurité effectué" >> $fichierlog
}
sRapportSecurite()
{
        sed -r 's/^#(.*rapportSecurite.sh)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Relance de la génération du rapport de sécurité effectuée" >> $fichierlog
}


aRapportEtat()
{
    	sed -r 's/^([^#].*rapportEtat.sh.*)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Arrêt de la génération des rapports d'Etat effectué" >> $fichierlog
}
sRapportEtat()
{
        sed -r 's/^#(.*rapportEtat.sh.*)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Relance de la génération des rapports d'Etat effectuée" >> $fichierlog
}


aRapportSystem()
{
    	sed -r 's/^([^#].*rapportSystem.sh)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Arrêt de la génération des rapports System effectué" >> $fichierlog
}
sRapportSystem()
{
        sed -r 's/^#(.*rapportSystem.sh)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
	sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Relance de la génération des rapports System effectuée" >> $fichierlog
}

aModbusGet()
{
    # 1) Création du flag ArretServiceImport
	flagArretServiceModbus='/tmp/.flagArretServiceModbus'
    touch $flagArretServiceModbus

    # 2) Attente de la fin du traitement de la récupération des informations modbus
	flagGetInfosModbus='/tmp/.flagBoilerBoxGetInfosModbus'
    while true
    do
        if [ -e "$flagGetInfosModbus" ]
        then
        	nbScriptsModbus=$(ps -ef | grep "php.*BoilerBox.*modbus.*get" | grep -v grep | wc -l)
            if  [ $nbScriptsModbus -eq 1 ]
            then
				break
                sleep 2
            elif [ $nbScriptsModbus -eq 0 ]
                then
                echo `date +"%Y-%m-%d %T"`";Le Flag de récupération des informations modbus existe mais aucun script n'a été trouvé. Arrêt du traitement" >> $fichierlog
                break
            fi
			# Forcage de la suppression du flag
			rm $flagGetInfosModbus
        else
            break
        fi
    done

    # 3) Modification de la crontab : Mise en commentaire de la partie modbus
    sed -r 's/^([^#].*modbusGet.sh)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
    sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab

	# 4) Kill des processus de récupération des informations modbus
	tabIdProcess=$(ps -ef | grep "sh.*BoilerBox.*modbusGet" | grep -v grep | awk "{print \$2 }")
	for i in ${tabIdProcess[@]}
	do
		listIdProcess=$listIdProcess" "$i
	done
	listIdProcess=$(echo ${listIdProcess:1})
	if [ $listIdProcess ]
	then
		commandKill=$(sudo kill -9 $listIdProcess)
	fi

    echo `date +"%Y-%m-%d %T"`";[script];Arrêt de la récupération des informations modbus effectué" >> $fichierlog
    rm $flagArretServiceModbus
}
sModbusGet()
{
        sed -r 's/^#(.*modbusGet.sh)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
        sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Relance de la récupération des informations modbus effectuée" >> $fichierlog
}

aSwiftmailer()
{
        sed -r 's/^([^#].*swiftmailer:spool:send.*)/#\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
        sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Arrêt de l'envoi des mails effectué" >> $fichierlog
}
sSwiftmailer()
{
        sed -r 's/^#(.*swiftmailer:spool:send.*)/\1/' /tmp/boilerboxCrontab > /tmp/boilerboxCrontab2
        sed -e '/^# DO NOT EDIT THIS FILE/d' -e '/^#.*Cronie/d' -e '/^#.*\/tmp\//d' /tmp/boilerboxCrontab2 > /tmp/boilerboxCrontab
        echo `date +"%Y-%m-%d %T"`";[script];Relance de l'envoi des mails effectuée" >> $fichierlog
}






sudo crontab -u root -l > /tmp/boilerboxCrontab
case $1 in 
    "atransfertftp")
		aTransfertFtp
	;;
    "stransfertftp")
		sTransfertFtp
	;;
    "aimportbin")
		aImportBin
	;;
    "simportbin")
		sImportBin
	;;
    "aall")
		aImportBin
		aTransfertFtp
		aRapportJournalier
		aRapportSystem
		aRapportSecurite
		aRapportEtat
    	aModbusGet
    	aSwiftmailer
	;;
    "sall")
		sTransfertFtp
		sImportBin
		sRapportJournalier
		sRapportSystem
		sRapportSecurite
		sRapportEtat
    	sModbusGet
    	sSwiftmailer
	;;
    "arapportjournalier")
		aRapportJournalier
	;;
    "srapportjournalier")
        sRapportJournalier
	;;
    "arapportsystem")
        aRapportSystem
	;;
    "srapportsystem")
		sRapportSystem
	;;
    "arapportsecurite")
        aRapportSecurite
	;;
    "srapportsecurite")
		sRapportSecurite
	;;
    "arapportetat")
        aRapportEtat
	;;
    "srapportetat")
        sRapportEtat
	;;
    "amodbusget")
        aModbusGet
    ;;
    "smodbusget")
        sModbusGet
    ;;
    "aswiftmailer")
        aSwiftmailer
    ;;
    "sswiftmailer")
        sSwiftmailer
    ;;
esac

sudo crontab -u root /tmp/boilerboxCrontab

rm /tmp/boilerboxCrontab
rm /tmp/boilerboxCrontab2

exit 0

